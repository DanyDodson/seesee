version: '3.8'
services:

  # ==========================================#
  #  gateway/client                           #
  # ==========================================#

  gateway_client:
    container_name: gateway_client
    build: ./gateway/client
    restart: always
    environment:
      USERS_SERVICE_URI: ${USERS_SERVICE_URI}
      LISTINGS_SERVICE_URI: ${LISTINGS_SERVICE_URI}
    expose:
      - ${GATEWAY_CLIENT_EXPOSE}
    ports:
      - '${GATEWAY_CLIENT_PORT}:${GATEWAY_CLIENT_PORT}'
    depends_on:
      - users_service
      - listings_service
    networks:
      - api_network

  # ==========================================#
  #  services/nginx                           #
  # ==========================================#
  
  nginx_service:
    container_name: nginx_service
    build: ./services/nginx
    restart: unless-stopped
    # volumes:
      # - ./gateway/client/build:/usr/share/nginx/html
      # - web_root:/usr/share/nginx/html
      # - ./services/nginx/conf.d/default.conf:/etc/nginx/conf.d/nginx.conf
      # - certbot_etc:/etc/letsencrypt
      # - certbot_var:/var/lib/letsencrypt
      # - dhparam:/etc/ssl/certs
    expose:
      - ${NGINX_DEFAULT_PORT}
    ports:
      - ${NGINX_DEFAULT_PORT}:${NGINX_DEFAULT_PORT}
      # - ${NGINX_SECURE_PORT}:${NGINX_SECURE_PORT}
    networks:
      - api_network

  # ==========================================#
  #  services/nginx:certbot                   #
  # ==========================================#

  # nginx_certbot:
  #   container_name: nginx_certbot
  #   image: certbot/certbot
  #   command: certonly --webroot --webroot-path=/usr/share/nginx/html --email dany@dany.codes --agree-tos --no-eff-email --staging -d seesee.space  -d www.seesee.space
  #   volumes:
  #     # - ./gateway/client/build:/usr/share/nginx/html
  #     - web_root:/usr/share/nginx/html
  #     - certbot_etc:/etc/letsencrypt
  #     - certbot_var:/var/lib/letsencrypt
  #   networks:
  #     - api_network

  # ==========================================#
  #  services/users                           #
  # ==========================================#
  
  users_service:
    container_name: users_service
    build: ./services/users
    restart: unless-stopped
    # command: babel-watch -L src/index.js
    environment:
      DB_URI: ${USERS_SERVICE_DB_URI}
      NODE_ENV: ${NODE_ENV}
    expose: 
      - ${USERS_SERVICE_PORT}
    depends_on:
      - users_service_db
    networks:
      - api_network

  # ==========================================#
  #  services/users:db                        #
  # ==========================================#

  users_service_db:
    container_name: users_service_db
    image: mysql:5.7.20
    environment:
      MYSQL_ROOT_PASSWORD: ${USERS_SERVICE_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${USERS_SERVICE_DB_ROOT_DATABASE}
    ports:
      - 0.0.0.0:${USERS_SERVICE_DB_HOST_PORT}:${USERS_SERVICE_DB_CONTAINER_PORT}
    networks:
      - api_network

  # ==========================================#
  #  services/listings                        #
  # ==========================================#

  listings_service:
    container_name: listings_service
    build: ./services/listings
    restart: unless-stopped
    # command: babel-watch -L src/index.js
    environment:
      DB_URI: ${LISTINGS_SERVICE_DB_URI}
      NODE_ENV: ${NODE_ENV}
    expose: 
      - ${LISTINGS_SERVICE_PORT}
    depends_on:
      - listings_service_db
    networks:
      - api_network

  # ==========================================#
  #  services/listings:db                     #
  # ==========================================#

  listings_service_db:
    container_name: listings_service_db
    image: mysql:5.7.20
    environment:
      MYSQL_ROOT_PASSWORD: ${LISTINGS_SERVICE_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${LISTINGS_SERVICE_DB_ROOT_DATABASE}
    ports:
      - 0.0.0.0:${LISTINGS_SERVICE_DB_HOST_PORT}:${LISTINGS_SERVICE_DB_CONTAINER_PORT}
    networks:
      - api_network
      
# ==========================================#
#  global volumes                           #
# ==========================================#

# volumes:

  # certbot_etc:
  # certbot_var:

  # web_root:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: /home/dany/projects/github/seesee/platforms/pwa/build/
  #     o: bind

  # dhparam:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: /home/dany/projects/github/seesee/services/nginx/certs
  #     o: bind

# ==========================================#
#  global networks                          #
# ==========================================#
  
networks:
  api_network:
    driver: bridge


