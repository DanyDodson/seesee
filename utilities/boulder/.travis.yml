os: linux
dist: xenial

language: shell

addons:
  hosts:
    - le1.wtf
    - boulder

env:
  global:
    - IMAGE=jrcs/letsencrypt-nginx-proxy-companion
    - COMPOSE_VERSION=1.25.4
    - YQ_VERSION=3.2.1
  # jobs:
    - TEST_FILE=2-containers/compose-v2/docker-compose.yaml
    - TEST_FILE=2-containers/compose-v3/environment/docker-compose.yaml
    - TEST_FILE=2-containers/compose-v3/labels/docker-compose.yaml
    - TEST_FILE=3-containers/compose-v2/environment/docker-compose.yaml
    - TEST_FILE=3-containers/compose-v2/labels/docker-compose.yaml
    - TEST_FILE=3-containers/compose-v3/environment/docker-compose.yaml
    - TEST_FILE=3-containers/compose-v3/labels/docker-compose.yaml

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > .docker-compose.temp
  - sudo mv .docker-compose.temp /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  - curl -L https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 > .yq.temp
  - sudo mv .yq.temp /usr/local/bin/yq
  - sudo chmod +x /usr/local/bin/yq

install:
  - docker network create nginx_proxy -o "com.docker.network.bridge.name"="nginx_proxy"
  - tests/setup-boulder.sh

before_script:
  - docker pull "$IMAGE"
  - docker run --rm "$IMAGE" simp_le -v --test
  - curl -L https://raw.githubusercontent.com/jwilder/nginx-proxy/master/nginx.tmpl > nginx.tmpl

script:
  - tests/test.sh $TEST_FILE

after_failure:
  - docker-compose -p nginx-proxy logs
  - docker logs boulder

# sudo: required
# services:
#   - docker

# before_install:
  - docker build -t danydodson/react-test -f ./web/gallery_pwa/Dockerfile.test ./web/gallery_pwa

# script:
  - docker run danydodson/react-test npm test -- --coverage

after_success:
  - docker build -t danydodson/seesee_services_nginx ./services/nginx
  - docker build -t danydodson/seesee_services_auth ./services/auth/api
  - docker build -t danydodson/seesee_services_listings ./services/listings/api
  - docker build -t danydodson/seesee_services_users ./uservices/users/api
  - docker build -t danydodson/seesee_services_redis ./uservices/redis
  # Log in to the docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # Take those images and push them to docker hub
  - docker push danydodson/seesee_services_nginx
  - docker push danydodson/seesee_services_auth
  - docker push danydodson/seesee_services_listings
  - docker push danydodson/seesee_services_users
  - docker push danydodson/seesee_services_redis

deploy:
  provider: elasticbeanstalk
  region: us-west-1
  app: seesee
  env: seesee-env
  bucket_name: elasticbeanstalk-us-west-1-306476627547
  bucket_path: seesee
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key:
    secure: $AWS_SECRET_KEY