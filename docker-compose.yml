version: '3.8'
services:

  # ==========================================#
  #  services/sample                          #
  # ==========================================#

  node_sample:
    image: node_sample
    container_name: node_sample
    build:
      context: ./services/sample/
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - app_network

  # ==========================================#
  #  services/users                           #
  # ==========================================#

  # users_service:
  #   container_name: users_service
  #   build:
  #     context: ./services/users/
  #     dockerfile: Dockerfile
  #   environment:
  #     - DB_URI=mysql://root:password@users_service_db/db?charset=UTF8
  #   depends_on:
  #     - users_service_db

  # ==========================================#
  #  services/users:data                      #
  # ==========================================#

  # users_service_db:
  #   container_name: users_service_db
  #   image: mysql:5.7.20
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=password
  #     - MYSQL_DATABASE=db
  #   ports:
  #     - "7201:3306"

  # ==========================================#
  #  services/listings                        #
  # ==========================================#

  # listings_service:
  #   container_name: listings_service
  #   build:
  #     context: ./services/listings/
  #     dockerfile: Dockerfile
  #   environment:
  #     - DB_URI=mysql://root:password@listings_service_db/db?charset=UTF8
  #   depends_on:
  #     - listings_service_db

  # ==========================================#
  #  services/listings:data                   #
  # ==========================================#

  # listings_service_db:
  #   container_name: listings_service_db
  #   image: mysql:5.7.20
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=password
  #     - MYSQL_DATABASE=db
  #   ports:
  #     - "7200:3306"

  # ==========================================#
  #  nginx_proxy                              #
  # ==========================================#
  
  nginx_proxy:
    image: nginx:mainline-alpine
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - web_root:/var/www/html
      - ./services/nginx:/etc/nginx/conf.d
      - certbot_etc:/etc/letsencrypt
      - certbot_var:/var/lib/letsencrypt
      # - dhparam:/etc/ssl/certs
    depends_on:
      - node_sample
      # - users_service
      # - listings_service
    networks:
      - app_network
      
  # ==========================================#
  #  certbot                                  #
  # ==========================================#

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot_etc:/etc/letsencrypt
      - certbot_var:/var/lib/letsencrypt
      - web_root:/var/www/html
    depends_on:
      - nginx_proxy
    command: certonly --webroot --webroot-path=/var/www/html --email dany@dany.codes --agree-tos --no-eff-email --staging -d seesee.space  -d www.seesee.space
    # command: certonly --webroot --webroot-path=/var/www/html --email dany@dany.codes --agree-tos --no-eff-email --force-renewal -d seesee.space  -d www.seesee.space

  # rabbitmq:
  #   container_name: rabbitmq
  #   image: rabbitmq:3-management-alpine
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
  #   env_file: ./subscribers/rabbitmq/.env
  #   environment:
  #     RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
  #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
  #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
  #   volumes:
  #     - ./subscribers/rabbitmq/etc/:/etc/rabbitmq/
  #     - ./subscribers/rabbitmq/data/:/var/lib/rabbitmq/
  #     - ./subscribers/rabbitmq/logs/:/var/log/rabbitmq/

  # ==========================================#
  #  services/grafana                         #
  # ==========================================#

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana
  #   expose:
  #     - 3000
  #   environment:
  #     - VIRTUAL_HOST=graf.seesee.space
  #     - VIRTUAL_PORT=3000
  #     - LETSENCRYPT_HOST=graf.seesee.space
  #     - LETSENCRYPT_EMAIL=dany@dany.codes
  #   restart: always

  # ==========================================#
  #  services/tunnel                          #
  # ==========================================#

  # proxy_tunnel:
  #   container_name: proxy_tunnel
  #   image: danydodson/seesee_proxy_tunnel
  #   ports:
  #     - '2222:22'
  #   expose:
  #     - '2222'
  #   environment:
  #     - VIRTUAL_HOST=dev.seesee.space
  #     - LETSENCRYPT_HOST=dev.seesee.space
      
# ==========================================#
#  global volumes                           #
# ==========================================#

volumes:

  certbot_etc:
  
  certbot_var:

  web_root:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/seesee/services/sample/views/
      o: bind

  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/seesee/subscribers/certbot/dhparam/
      o: bind
  
# ==========================================#
#  global networks                          #
# ==========================================#
  
networks:
  app_network:
    driver: bridge