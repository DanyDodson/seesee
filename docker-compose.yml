version: "3.7"
services:

  nginx_proxy:
    ports:
      - 80:80
      - 443:443
    networks:
      - back_tier
    container_name: services:nginx_proxy
    volumes:
      - /etc/nginx/conf.d
    build:
      dockerfile: Dockerfile
      context: ./gateway/nginx_proxy
    depends_on:
      - web_client
      - users_api

  web_client:
    ports:
      - 3000:3000
    networks:
      - front_tier
    container_name: gateways:web_client
    volumes:
      - ./gateway/web_client/node_modules
      - ./gateway/web_client:/home/node/workspace
    build:
      context: ./gateway/web_client
      dockerfile: Dockerfile
    depends_on:
      - users_api

  users_api:
    ports:
      - 7000:7000
    networks:
      - back_tier
    container_name: services:users_api
    volumes:
      - /home/node/workspace/node_modules
      - ./services/users/api:/home/node/workspace
    env_file: ./services/users/api/.env
    environment:
      - MONGO_USERNAME=dany
      - MONGO_PASSWORD=dany
      - MONGO_HOSTNAME=users_mongo
      - MONGO_PORT=27017
      - MONGO_DB=usersdatabase
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    build:
      context: ./services/users/api
      dockerfile: Dockerfile
    depends_on:
      - users_mongo

  users_mongo:
    image: mongo
    ports:
      - 0.0.0.0:27107:7000
    restart: unless-stopped
    networks:
      - back_tier
    container_name: services:users_mongo
    volumes:
      - users_db:/data/db
    env_file: ./services/users/api/.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=dany
      - MONGO_INITDB_ROOT_PASSWORD=dany

  users_redis:
    image: 'redis:latest'
    restart: unless-stopped
    networks:
      - back_tier
    container_name: services:users_redis

  redis_worker:
    networks:
      - back_tier
    container_name: services:redis_worker
    volumes:
      - /app/node_modules
      - ./services/redis:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    build:
      context: ./services/redis
      dockerfile: Dockerfile
    depends_on:
      - users_redis

volumes:
  users_db:

networks:
  front_tier:
  back_tier: