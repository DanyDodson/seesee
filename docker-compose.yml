version: "3.7"
services:

  gateway-nginx-proxy:
    container_name: gateway-nginx-proxy
    build:
      context: ./gateway/nginx-proxy
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/nginx/conf.d
    depends_on:
      - gateway-web-client
      - users_service
    networks:
      - network

  gateway-web-client:
    build:
      context: ./gateway/web-client
      dockerfile: Dockerfile
    container_name: gateway-web-client
    ports:
      - 3000:3000
    volumes:
      - ./gateway/web-client/node_modules
      - ./gateway/web-client:/home/node/workspace
    networks:
      - network

  users_service:
    container_name: users_service
    build:
      context: ./services/users/api
      dockerfile: Dockerfile
    env_file: ./services/users/api/.env
    environment:
      - MONGO_USERNAME=dany
      - MONGO_PASSWORD=dany
      - MONGO_HOSTNAME=users_data
      - MONGO_PORT=27017
      - MONGO_DB=usersdatabase
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - 7000:7000
    volumes:
      - /home/node/workspace/node_modules
      - ./services/users/api:/home/node/workspace
    networks:
      - network
      - users_network
    depends_on:
      - users_data

  users_data:
    container_name: users_data
    image: mongo
    restart: unless-stopped
    env_file: ./services/users/api/.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=dany
      - MONGO_INITDB_ROOT_PASSWORD=dany
    volumes:
      - users_db_vol:/data/db
    ports:
      - 0.0.0.0:27107:7000
    networks:
      - network
      - users_network

  redis:
    container_name: redis
    image: 'redis:latest'

  redis_worker:
    container_name: redis_worker
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    build:
      context: ./services/redis
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./services/redis:/app

volumes:
  users_db_vol:

networks:
  network:
  users_network:
  listings_network: