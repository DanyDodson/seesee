version: '3.8'

services:
  nginx-gateway:
    build:
      context: gateway
      dockerfile: Dockerfile
    restart: always
    container_name: nginx-gateway
    image: danydodson/ss-nginx-gateway
    ports:
      - '80:80'
    environment: 
      - USERS_API=http://users-api
      - POSTS_API=http://posts-api
      - REDIS_AUTH=http://redis-auth
    env_file:
      - ./gateway/.env
    volumes: 
      - ./gateway/logs/:/var/log/nginx/
      - ./gateway/conf:/etc/nginx/conf/:ro
      - ./gateway/servers:/etc/nginx/servers/:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - back-tier
    depends_on:
      - users-api
      - posts-api

  redis-auth:
    image: redis
    container_name: redis-auth
    ports:
      - 6379:6379
    networks:
      - back-tier

  web-pwa:
    build:
      context: web-pwa
      dockerfile: Dockerfile.dev
    restart: always
    container_name: web-pwa
    image: danydodson/ss-web-pwa
    ports:
      - '8089:8089'
    networks:
      - back-tier

  users-api:
    build:
      context: users-api
      dockerfile: Dockerfile
    restart: always
    container_name: users-api
    image: danydodson/ss-users-api
    env_file:
      - ./users-api/.env
    volumes:
      - ./users-api:/home/node/app
      - /home/node/app/node_modules
    networks:
      - back-tier

  posts-api:
    build:
      context: posts-api
      dockerfile: Dockerfile
    restart: always
    container_name: posts-api
    image: danydodson/ss-posts-api
    env_file:
      - ./posts-api/.env
    volumes:
      - ./posts-api:/home/node/app
      - /home/node/app/node_modules
    networks:
      - back-tier

networks:
  back-tier:
    driver: bridge
    name: back-tier